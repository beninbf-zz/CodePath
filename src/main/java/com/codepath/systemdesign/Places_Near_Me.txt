Places Near me System:

Given a latitude, longtitude, and radius return a list of places within that radius

Microservices:

- Register MCS
- Grid Location MCS
- Places MCS


The key to this problem is to understand how to organize geo location data.
We do that by not using latitude and longtitude but instead orgnazing an area into grids.

That could essentially be done by an offline process, that could consume flat files on
geo location data and then transform them into rows in a DB.

Logical schema for grid:

grid location: id, lowerLat, upperLat, lowerLong, UpperLong (the four points of a square)

Query to look up a grid

Select * from gridLocation
where lowerLat <= lat // we want lowerlat <= lat <= upperlat
and upperLat >= lat
and lowerLong >= long
and upperLong <= long  // we want lowerLong <= long <= upperlong

This query will be slow unless we create index on the 4 point columns,
lowerLat, upperLat, lowerLong, UpperLong.

Based on a lat, long, and radius, we query the grid location table, and to return grids.


Register MCS:

As new places are created, they will be assigned to a grid. That assignment will be used
to populate a cache such that, the key will be the grid and the value a list of place
objects.

As registering does not ahve to be fast, as a place is registered, it will make a call
to the grid service to get a grid. Then asynchronously update a Cache in the places
MCS, with the grid mapping to a list.

The larger the radius supplied to the gridlocation service, the more grids returned.

Places MCS:

A cache holding our Key Value pairs: Grid -> List of places.
The Places MCS, will take a lat, long, and radius and call the gridLocaiton service
to retrieve the grids. It will then use each grid to pull a list of places, merge the lists
and return them to the caller.
