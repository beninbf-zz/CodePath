package com.stripe.interview;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import okhttp3.Headers;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class Main {


    private static final String STRIPE_BASE_URI = "https://api.stripe.com";

    public static final MediaType JSON = MediaType.get("application/json; charset=utf-8");
    public static final MediaType form = MediaType.get("application/x-www-form-urlencoded");


    public static OkHttpClient client = new OkHttpClient();


    public static void main(String... args) throws Exception {
        //useGSONForSomeReason("hello\n");


        //File file = new File(getClass().getClassLoader().getResource("resquestlog-charges.json").getFile());

        //InputStream inputStream = getClass().getClassLoader().getResourceAsStream("database.properties");
        InputStream inputStreamCharges = Main.class.getClassLoader().getResourceAsStream("requestlog-charges.json");
        InputStream inputStreamCustomerCharges = Main.class.getClassLoader().getResourceAsStream("requestlog-customer-charges.json");


        //BufferedReader chargesReader = new BufferedReader(new FileReader("/Users/bbryant/Desktop/request-replay-master/java/src/main/resources/requestlog-charges.json"));
        BufferedReader customerReader = new BufferedReader(new FileReader("/Users/bbryant/Desktop/request-replay-master/java/src/main/resources/requestlog-customer-charges.json"));


        Gson gson = new Gson();
        MyLog[] myLogArray = gson.fromJson(customerReader, MyLog[].class);
        //System.out.println(myLogArray.length);

        for (MyLog myLog: myLogArray) {
            int code = post(STRIPE_BASE_URI + myLog.request.url, myLog.getRequest().headers, myLog.request.body);
            System.out.println(String.format("Expected code=%s, Actual code=%s", myLog.getResponse().code, code));
        }

        List<MyLog.MyRequest> myRequests = new ArrayList<>();
        List<MyLog.MyResponse> myResponses = new ArrayList<>();


        System.out.println(inputStreamCharges);
        System.out.println(inputStreamCustomerCharges);

    }

    public static void useGSONForSomeReason(String input) {
        new GsonBuilder().create().toJson(input, System.out);
    }

    public static int post(String url, Map<String, String> headersMap, String json) throws IOException {
        System.out.println("url: " + url);
        Headers headers = Headers.of(headersMap);
        RequestBody body = RequestBody.create(form, json);
        Request request = new Request.Builder()
            .headers(headers)
            .url(url)
            .post(body)
            .build();
        try (Response response = client.newCall(request).execute()) {
            System.out.println(response.body().string());
            return response.code();
        }
    }
}
/**
 * Pom dependencies for square ok http, and google gson
 *
 * <guava.version>18.0</guava.version>
 *  <dependency>
 *       <groupId>com.google.code.gson</groupId>
 *       <artifactId>gson</artifactId>
 *       <version>2.4</version>
 *     </dependency>
 *
 *     <dependency>
 *       <groupId>com.squareup.okhttp3</groupId>
 *       <artifactId>okhttp</artifactId>
 *       <version>3.13.1</version>
 *     </dependency>
 */
